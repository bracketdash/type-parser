{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "demo/src/alt-types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "demo/src/my-component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Test component",
          "name": "MyComponent",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "age",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "internal",
              "type": {
                "text": "Hobby"
              },
              "parsedType": {
                "text": "'sports' | 'music' | 'art'"
              }
            },
            {
              "kind": "field",
              "name": "dtsExternal",
              "type": {
                "text": "Test"
              },
              "parsedType": {
                "text": "'value1' | 'value2' | 'value3'"
              }
            },
            {
              "kind": "field",
              "name": "tsExternal",
              "type": {
                "text": "Test2"
              },
              "parsedType": {
                "text": "'value4' | 'value5' | 'value6'"
              }
            },
            {
              "kind": "field",
              "name": "test3",
              "type": {
                "text": "Test | Test2"
              },
              "parsedType": {
                "text": "'value1' | 'value2' | 'value3' | 'value4' | 'value5' | 'value6'"
              }
            },
            {
              "kind": "field",
              "name": "generic",
              "type": {
                "text": "MyGeneric"
              },
              "parsedType": {
                "text": "'value1' | 'value2' | 'value3' | 'sports' | 'music' | 'art'"
              }
            },
            {
              "kind": "field",
              "name": "exclude",
              "type": {
                "text": "ExcludeUnionType"
              },
              "parsedType": {
                "text": "'value4' | 'value5' | 'value6' | 'value2' | 'value3'"
              }
            },
            {
              "kind": "field",
              "name": "namedUnion",
              "type": {
                "text": "UnionType"
              },
              "parsedType": {
                "text": "'value4' | 'value5' | 'value6' | 'value1' | 'value2' | 'value3'"
              }
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "DirectionOptions"
              },
              "parsedType": {
                "text": "'Up' | 'Down' | 'Left' | 'Right'"
              }
            },
            {
              "kind": "field",
              "name": "enumExample",
              "type": {
                "text": "DirectionEnum"
              },
              "parsedType": {
                "text": "0 | 1 | 2 | 3"
              }
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "Variant"
              },
              "default": "\"primary\"",
              "parsedType": {
                "text": "'primary' | 'secondary' | 'tertiary'"
              }
            },
            {
              "kind": "field",
              "name": "foobar",
              "type": {
                "text": "{ [key: string]: any }"
              },
              "default": "{ foo: 'bar' }"
            },
            {
              "kind": "field",
              "name": "complexObject",
              "type": {
                "text": "PositionPopoverOptions"
              },
              "parsedType": {
                "text": "{ arrowElement?: string | HTMLElement | undefined, anchorElement?: string | HTMLAnchorElement | undefined, arrowPadding?: number, maxWidth?: number, offset?: number, position?: PopoverPosition | undefined, viewportMargin?: number, rootMarginTop?: number }"
              }
            },
            {
              "kind": "field",
              "name": "omitType",
              "type": {
                "text": "MyOmitType"
              }
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "my-component",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MyComponent",
          "declaration": {
            "name": "MyComponent",
            "module": "demo/src/my-component.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "my-component",
          "declaration": {
            "name": "MyComponent",
            "module": "demo/src/my-component.ts"
          }
        }
      ]
    }
  ]
}
